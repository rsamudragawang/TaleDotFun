   // models/NftDesignDefinition.js
   const mongoose = require('mongoose');
   const { Schema } = mongoose;

    const nftDesignDefinitionSchema = new Schema({
        designId: { type: String, required: true, unique: true, index: true }, // UUID generated by backend
        creatorWallet: { type: String, required: true, index: true },
        baseName: { type: String, required: true }, // Name without numbering
        description: { type: String },
        publicImageIpfsUri: { type: String, required: true }, // Shared image URI
        totalEditions: { type: Number, required: true },
        pricePerEditionLamports: { type: Number, required: true },
        // Store the fully constructed base metadata (excluding edition specifics) for convenience
        baseMetadata: { type: Object },
         status: {
            type: String,
            enum: ['processing_metadata', 'metadata_ready', 'minting_in_progress', 'minting_complete', 'error'],
            default: 'processing_metadata',
            index: true,
         },
         errorMessage: {type: String}, // Store error if process fails

    }, { timestamps: true });

   module.exports = mongoose.model('NftDesignDefinition', nftDesignDefinitionSchema);